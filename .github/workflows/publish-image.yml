name: Publish Container Image
on:
  workflow_call:
    inputs:
      language:
        type: string
        description: The programming language of the devcontainer
        required: true
      version:
        type: string
        description: The version of the devcontainer
        required: true
      description:
        type: string
        description: The short description for dockerhub
        required: true
      repository:
        type: string
        description: The dockerhub repository to use
        default: metio/devcontainers
        required: false
      license:
        type: string
        description: The license of the container
        default: CC0-1.0
        required: false
      vendor:
        type: string
        description: The vendor of the container
        default: metio.wtf
        required: false
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout Code
        uses: actions/checkout@v3
      - id: cosign-install
        name: Install Cosign
        uses: sigstore/cosign-installer@main
      - id: syft-install
        name: Install Syft
        uses: anchore/sbom-action/download-syft@v0.12.0
      - id: grype-install
        name: Install Grype
        uses: anchore/scan-action/download-grype@v3
      - id: buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - id: dockerhub_login
        name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}
      - id: timestamp
        name: Create Timestamp
        run: echo "::set-output name=date::$(date --rfc-3339=seconds)"
      - id: publish
        name: Publish Image
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./languages/${{ inputs.language }}/${{ inputs.version }}/
          file: ./languages/${{ inputs.language }}/${{ inputs.version }}/Containerfile
          push: true
          tags: docker.io/${{ inputs.repository }}-${{ inputs.language }}:${{ inputs.version }}
          labels: |
            org.opencontainers.image.title=${{ inputs.language }}
            org.opencontainers.image.description=Image for ${{ inputs.language }} development
            org.opencontainers.image.licenses=${{ inputs.license }}
            org.opencontainers.image.vendor=${{ inputs.vendor }}
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}/languages/${{ inputs.language }}/${{ inputs.version }}
            org.opencontainers.image.version=${{ inputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.timestamp.outputs.date }}
          cache-from: type=registry,ref=${{ inputs.repository }}-${{ inputs.language }}:buildcache
          cache-to: type=registry,ref=${{ inputs.repository }}-${{ inputs.language }}:buildcache,mode=max
      - id: sign
        name: Sign Image
        run: cosign sign docker.io/${{ inputs.repository }}-${{ inputs.language }}@${{ steps.publish.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: "true"
      - id: sbom
        name: Generate SBOM
        run: syft docker.io/${{ inputs.repository }}-${{ inputs.language }}@${{ steps.publish.outputs.digest }} -o spdx-json=sbom-spdx.json
      - id: sbom-attest
        name: Attest SBOM
        run: |
          cosign attest \
            --predicate sbom-spdx.json \
            --type spdx \
            docker.io/${{ inputs.repository }}-${{ inputs.language }}@${{ steps.publish.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: "true"
      - id: grype-scan
        name: Scan SBOM with Grype
        run: grype -o sarif --only-fixed sbom:sbom-spdx.json > grype.sarif
      - id: hadolint-scan
        name: Scan Containerfile with Hadolint
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: ./languages/${{ inputs.language }}/${{ inputs.version }}/Containerfile
          format: sarif
          output-file: hadolint.sarif
          no-fail: true
      - id: grype-upload
        name: Upload Grype SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: grype.sarif
          category: grype-${{ inputs.language }}-${{ inputs.version }}
      - id: hadolint-upload
        name: Upload Hadolint SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: hadolint.sarif
          category: hadolint-${{ inputs.language }}-${{ inputs.version }}
      - id: documentation
        name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}
          repository: ${{ inputs.repository }}-${{ inputs.language }}
          short-description: ${{ inputs.description }}
          readme-filepath: ./languages/${{ inputs.language }}/README.md
